
.homeContainer {
	display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  background: radial-gradient(ellipse at bottom, #0d1d31 0%, #0c0d13 100%);
  overflow: hidden;
  position: relative; /* allow absolutely positioned children (forest) to be tied to this initial view */
}

.centeredWelcome {
	flex: 1 1 0;
	display: flex;
	align-items: center;
	justify-content: center;
}

.welcomeText {
  /* Use clamp for responsive scaling: min 1.8rem on very small screens, preferred scaling based on viewport, max 5rem on large screens */
  font-size: clamp(2.25rem, 6vw, 5rem);
	font-weight: 800;
	color: #fff;
	letter-spacing: 0.05em;
	text-shadow: 0 4px 32px rgba(0,0,0,0.3);
	margin: 0;
	user-select: none;
	animation: fadeIn 2s cubic-bezier(.4,0,.2,1);
}

@keyframes fadeIn {
	from { opacity: 0; transform: translateY(40px); }
	to { opacity: 1; transform: none; }
}

/* Starfield Styles */
.stars {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 120%;
  transform: rotate(-45deg);
}

.star {
  --star-color: white;
  --star-tail-length: 6em;
  --star-tail-height: 2px;
  --star-width: calc(var(--star-tail-length) / 6);
  --fall-duration: 9s;
  --tail-fade-duration: var(--fall-duration);

  position: absolute;
  top: var(--top-offset);
  left: 0;
  width: var(--star-tail-length);
  height: var(--star-tail-height);
  color: var(--star-color);
  background: linear-gradient(45deg, currentColor, transparent);
  border-radius: 50%;
  filter: drop-shadow(0 0 6px currentColor);
  transform: translate3d(104em, 0, 0);
  animation: fall var(--fall-duration) var(--fall-delay) linear infinite, tail-fade var(--tail-fade-duration) var(--fall-delay) ease-out infinite;

  &::before,
  &::after {
    position: absolute;
    content: '';
    top: 0;
    left: calc(var(--star-width) / -2);
    width: var(--star-width);
    height: 100%;
    background: linear-gradient(45deg, transparent, currentColor, transparent);
    border-radius: inherit;
    animation: blink 2s linear infinite;
  }

  &::before {
    transform: rotate(45deg);
  }

  &::after {
    transform: rotate(-45deg);
  }

  pointer-events: none;
  will-change: transform, opacity;
}

/* Decorative forest silhouette that sits at the bottom of the initial viewport */
.forest {
  /* Tie the forest to the initial view by positioning absolutely within .homeContainer
     so it scrolls away when the user scrolls down. Make it full-width. */
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100%;
  height: 72vh;
  background: url('/images/forest-silhouette.png') bottom center / cover no-repeat;
  pointer-events: none;
  z-index: 0; /* keep behind nav (nav is z-index:1) */
}

/* Small info panel that sits just below the initial viewport; revealed when scrolling */
.initialInfo {
  position: absolute;
  left: 0;
  right: 0;
  top: 100%; /* place immediately after the .homeContainer content */
  padding: 3rem 1.5rem;
  display: flex;
  justify-content: center;
  align-items: center;
  background: linear-gradient(180deg, rgba(0,0,0,0) 0%, rgba(0,0,0,0.02) 50%, rgba(0,0,0,0.06) 100%);
  color: #e6f7ff;
  z-index: 1; /* sit above forest for readability */
  pointer-events: auto;
}

@media screen and (max-width: var(--mobile-screen-width, 768px)) {
  .star {
    animation: fall var(--fall-duration) var(--fall-delay) linear infinite;
  }
}

@keyframes fall {
  to {
    transform: translate3d(-30em, 0, 0);
  }
}

@keyframes tail-fade {
  0%, 50% {
    width: var(--star-tail-length);
    opacity: 1;
  }

  70%, 80% {
    width: 0;
    opacity: 0.4;
  }

  100% {
    width: 0;
    opacity: 0;
  }
}

@keyframes blink {
  50% {
    opacity: 0.6;
  }
}

